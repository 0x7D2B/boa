initSidebarItems({"fn":[["add_to_array_object","Utility function which takes an existing array object and puts additional values on the end, correctly rewriting the length"],["concat","`Array.prototype.concat(...arguments)`"],["construct_array","Utility function for creating array objects."],["create_constructor","Create a new `Array` object."],["every","`Array.prototype.every( callback, [ thisArg ] )`"],["fill","`Array.prototype.fill( value[, start[, end]] )`"],["filter","`Array.prototype.filter( callback, [ thisArg ] )`"],["find","`Array.prototype.find( callback, [thisArg] )`"],["find_index","`Array.prototype.findIndex( predicate [ , thisArg ] )`"],["for_each","`Array.prototype.forEach( callbackFn [ , thisArg ] )`"],["includes_value","`Array.prototype.includes( valueToFind [, fromIndex] )`"],["index_of","`Array.prototype.indexOf( searchElement[, fromIndex ] )`"],["is_array","`Array.isArray( arg )`"],["join","`Array.prototype.join( separator )`"],["last_index_of","`Array.prototype.lastIndexOf( searchElement[, fromIndex ] )`"],["make_array","Create a new array"],["map","`Array.prototype.map( callback, [ thisArg ] )`"],["new_array","Creates a new `Array` instance."],["pop","`Array.prototype.pop()`"],["push","`Array.prototype.push( ...items )`"],["reverse","`Array.prototype.reverse()`"],["shift","`Array.prototype.shift()`"],["slice","`Array.prototype.slice( [begin[, end]] )`"],["some","Array.prototype.some ( callbackfn [ , thisArg ] )"],["to_string","`Array.prototype.toString( separator )`"],["unshift","`Array.prototype.unshift( ...items )`"]]});